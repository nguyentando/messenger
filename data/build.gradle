apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    def root = rootProject.ext

    compileSdkVersion root.compileSdkVersion

    defaultConfig {
        minSdkVersion root.minSdkVersion
        targetSdkVersion root.targetSdkVersion
        versionCode root.versionCode
        versionName root.versionName
        testInstrumentationRunner root.test.testInstrumentationRunner
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        test {
            // include the share folder into test code
            java.srcDirs += "$projectDir/src/share"
        }

        androidTest {
            // include the share folder into androidTest code
            java.srcDirs += "$projectDir/src/share"
        }
    }
}

dependencies {
    def core = rootProject.ext.core
    def archComponents = rootProject.ext.architectureComponents
    def development = rootProject.ext.development
    def test = rootProject.ext.test

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // -------------------------------------- MODULE -----------------------------------------------
    implementation project(':domain')

    // -------------------------------------- CORE -------------------------------------------------
    implementation core.kotlin
    implementation core.rxKotlin
    implementation core.ktxCore
    // dagger
    implementation core.dagger
    kapt core.daggerCompiler

    // -------------------------------------- ARCHITECTURE COMPONENTS ------------------------------
    // room
    implementation archComponents.room
    implementation archComponents.roomRxJava
    kapt archComponents.roomCompiler
    // paging
    implementation archComponents.paging
    implementation archComponents.pagingRxJava
    // work manager
    implementation archComponents.workManager

    // for testing
    androidTestImplementation archComponents.archTesting

    // -------------------------------------- DEVELOPMENT ------------------------------------------
    implementation development.gson

    // -------------------------------------- TESTING ----------------------------------------------
    testImplementation project(path: ":domain", configuration: 'testArtifacts')
    testImplementation test.junit
    testImplementation test.mockito

    androidTestImplementation test.core
    androidTestImplementation test.extension
    androidTestImplementation test.runner
    androidTestImplementation test.rules
}
