apply plugin: 'java-library'
apply plugin: 'kotlin'

dependencies {
    def core = rootProject.ext.core
    def archComponents = rootProject.ext.architectureComponents
    def test = rootProject.ext.test

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // -------------------------------------- CORE -------------------------------------------------
    implementation core.kotlin
    implementation core.rxKotlin

    // -------------------------------------- ARCHITECTURE COMPONENTS ------------------------------
    // paging
    implementation archComponents.paging
    implementation archComponents.pagingRxJava

    // -------------------------------------- TESTING ----------------------------------------------
    testImplementation test.junit
    testImplementation test.mockito
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

sourceSets {
    test {
        // include the share folder into test code
        java.srcDirs += "$projectDir/src/share"
    }
}

/**
 * create a testJar file which matches with the testArtifacts configuration
 * other modules can depends on this module test code by using:
 * testImplementation project (path: ":domain", configuration: 'testArtifacts')
 * https://discuss.gradle.org/t/how-do-i-declare-a-dependency-on-a-modules-test-code/7172/6
 */
configurations {
    testArtifacts
}
task testJar(type: Jar) {
    baseName = "${project.name}-test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}
